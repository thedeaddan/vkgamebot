import vk_api
import telebot
import time
import traceback
import datetime
import random
bot = telebot.TeleBot("tgtoken") # –¢–ì –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏!!!(–û—à–∏–±–∫–∏ –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç—É–¥–∞, –∞ –Ω–µ –ø–∞–¥–∞—Ç—å –∏–ª–∏ –∑–∞—Å–∏—Ä–∞—Ç—å –∫–æ–Ω—Å–æ–ª—å —Å–µ—Ä–≤–µ—Ä–∞)
vk = vk_api.VkApi(token="vktoken")
def delete(ids):
	vk.method("messages.delete",{"message_ids":ids,"delete_for_all":1,})
def getone(count,peer_id):
	return vk.method("messages.getHistory", {"count":count,"user_id":551758635,"peer_id":peer_id})
def chlen(ids,from_id):
	usr = vk.method('users.get',{'fields':"first_name,screen_name","user_ids":from_id})[0]
	send_name = usr.get("first_name")
	send_scname = usr.get("screen_name")
	dlina = int(random.randint(0,40))
	rand = int(random.randint(1,1000))
	vk.method("messages.send",{"random_id":rand,"peer_id":2000000009,"message":"@"+send_scname+" ("+send_name+"), –¥–ª–∏–Ω–∞ —Ç–≤–æ–µ–π –±–∏–±—ã "+str(dlina)+" —Å–º.","reply_to":ids})
def butilka(ids,peer_id,from_id):
	usr = vk.method('users.get',{'fields':"first_name,screen_name","user_ids":from_id})[0]
	send_name = usr.get("first_name")
	send_scname = usr.get("screen_name")
	gCM = vk.method("messages.getConversationMembers",{"peer_id":2000000009})
	count = (int(gCM.get("count"))-2)
	rind = int(random.randint(0,count))
	user = gCM.get('profiles')[rind]
	nick = user.get('screen_name')
	ids = user.get('id')
	usr = vk.method('users.get',{'fields':"first_name,last_name","user_ids":ids,"name_case":"acc"})[0]
	fname = usr.get("first_name")
	lname = usr.get("last_name")
	randid = int(random.randint(0,1234))
	lovid = usr.get('id')
	sex = str(usr.get('sex'))
	if sex == "1":
		gender = "a"
	else:
		gender = ""
	if lovid == from_id:
		vk.method("messages.send",{"random_id":randid,"peer_id":2000000009,"message":"üíã @"+send_scname+" ("+send_name+")"+" –ø–æ—Ü–µ–ª—É–µ—Ç —Å–∞–º"+str(gender)+" —Å–µ–±—è üíã"})
	else:
		vk.method("messages.send",{"random_id":randid,"peer_id":2000000009,"message":"üíã @"+send_scname+" ("+send_name+")"+" –ø–æ—Ü–µ–ª—É–µ—Ç @"+nick+" ("+fname+" "+lname+") üíã"})
def sharick(ids):
	try:
		words = ["–ë–µ—Å—Å–ø–æ—Ä–Ω–æ","–í–æ–∑–º–æ–∂–Ω–æ.. –Ω–æ –Ω–µ—Ç.","–ö–æ–Ω–µ—á–Ω–æ –∂–µ –¥–∞!","–Ø –æ—Ç–≤–µ—á—É –¥–∞, –Ω–æ —Ç–µ–±–µ —Å—Ç–æ–∏—Ç —Å–∞–º–æ–º—É –æ–±–¥—É–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ","–≠—Ç–æ –Ω–µ —Å–∞–º–∞—è –ª—É—á—à–∞—è —Ç–≤–æ—è –º—ã—Å–ª—å..","–ö–æ–≥–¥–∞ –Ω–∏–±—É–¥—å, –Ω–æ –Ω–µ —Å–µ–≥–æ–¥–Ω—è","–î–∞, –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞.","–ö–∞–∫ –≤ —ç—Ç–æ–º –≤–æ–æ–±—â–µ –º–æ–∂–Ω–æ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è? –ö–æ–Ω–µ—á–Ω–æ –∂–µ –¥–∞!","–ú–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ, —á—Ç–æ —ç—Ç–æ –ª—É—á—à–∞—è –º—ã—Å–ª—å, –Ω–æ –¥–∞","–í –±–∏–±–ª–∏–∏ –Ω–∞–ø–∏—Å–∞–Ω–æ, —á—Ç–æ –¥–∞", "–ü—Ä–µ–¥—Ä–µ—à–µ–Ω–æ", "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π", "–û–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ –¥–∞", "–ú–æ–∂–µ—à—å –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω –≤ —ç—Ç–æ–º", "–ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è ‚Äî ¬´–¥–∞¬ª", "–í–µ—Ä–æ—è—Ç–Ω–µ–µ –≤—Å–µ–≥–æ", "–•–æ—Ä–æ—à–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã", "–ó–Ω–∞–∫–∏ –≥–æ–≤–æ—Ä—è—Ç ‚Äî ¬´–¥–∞¬ª", "–î–∞", "–ü–æ–∫–∞ –Ω–µ —è—Å–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ", "–õ—É—á—à–µ –Ω–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å", "–°–µ–π—á–∞—Å –Ω–µ–ª—å–∑—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç—å", "–°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –∏ —Å–ø—Ä–æ—Å–∏ –æ–ø—è—Ç—å", "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π", "–ú–æ–π –æ—Ç–≤–µ—Ç ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–æ –º–æ–∏–º –¥–∞–Ω–Ω—ã–º ‚Äî ¬´–Ω–µ—Ç¬ª", "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å —Ö–æ—Ä–æ—à–∏–µ", "–í–µ—Å—å–º–∞ —Å–æ–º–Ω–∏—Ç–µ–ª—å–Ω–æ"]
		unique_words = list(set(words))
		random.shuffle(unique_words)
		random.SystemRandom().shuffle(unique_words)
		rand = int(random.randint(1,1000))
		vk.method("messages.send",{"random_id":rand,"peer_id":2000000009,"message":"–ë–æ—Ç —Å–∫–∞–∑–∞–ª:"+str(unique_words[1]),"reply_to":ids})
	except Exception:
		bot.send_message(895942747,traceback.format_exc())
while True:
	try:
		php = getone(count = 1, peer_id	= 2000000009)
		peer_id = php.get("items")[0].get("peer_id")
		text = php.get("items")[0].get("text")
		att = php.get('items')[0].get('attachments')
		from_id = php.get('items')[0].get("from_id")
		ids = php.get("items")[0].get("id")
		ids = str(ids)
		text = text.lower()
		if text.lower() == "!—à–∞—Ä–∏–∫":
			sharick(ids)
		if text.lower() == "!–±—É—Ç—ã–ª–æ—á–∫–∞":
			butilka(ids,peer_id,from_id)
		if text.lower() == "!—á–ª–µ–Ω":
			chlen(ids,from_id)
		#print(nowtime+"\nID –î–∏–∞–ª–æ–≥–∞: "+str(peer_id)+"\n–¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: "+str(text)+"\n–í–ª–æ–∂–µ–Ω–∏—è: "+str(att)+"\nID –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è: "+str(from_id)+"\nID –°–æ–æ–±—â–µ–Ω–∏—è: "+str(ids))
		time.sleep(0.5)
	except Exception:
		bot.send_message(895942747,traceback.format_exc())
